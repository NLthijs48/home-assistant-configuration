# Detect when there are problems with a plant
- alias: Detect if Plant 3 is in the problem state
  trigger:
    # Trigger on all changes (interested in updated 'problem' details attribute next to the problem state)
    - entity_id: plant.3
      platform: state
      to: 'problem'
    - platform: state
      entity_id: plant.3
      attribute: problem
  condition:
    - condition: "state"
      entity_id: "plant.3"
      state: "problem"
      for:
        minutes: 15
  action:
    # Notify phone of Thijs
    - service: notify.mobile_app_phone_thijs
      data:
        title: >-
          {{ state_atrtr("plant.3", "friendly_name") }} needs attention
        message: >-
          {{state_attr("plant.3", "problem")}}
        data:
          tag: plant.3

# Detect when the problems are solved
- alias: Detect if the plant is in a good state
  trigger:
    - entity_id: plant.3
      platform: state
      from: 'problem' # TODO find out the 'good' state and use a 'to' trigger?
  action:
    # Notify phone of Thijs
    - service: notify.mobile_app_phone_thijs
      data:
        title: >-
          {{ state_atrtr("plant.3", "friendly_name") }} is doing well!
        message: No reported problems anymore
        data:
          tag: plant.3
