# Automations to set up a Hue Dial as home cinema controller

# Volume up/down
- id: '1684958661425'
  alias: Living room dial volume controller
  description: Control the home cinema volume with the Philips Hue Dial
  mode: queued # Allow queing to catch multiple rotation clicks
  max: 3 # Prevent queing too many actions, limit quick volume rampup
  trigger:
  # Hue Dial volume wheel rotating
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 7037bc40535d0e6293e902129518dd3e
      command: step_with_on_off
  action:
  - variables:
      # StepMode.Down or StepMode.Up
      step_mode: '{{ trigger.event.data.params.step_mode }}'
      # How much it got rotated
      # - ideally this would just report the number of clicks, but instead it
      #   reports some kind of combination of clicks+speed,
      #   similar to mouse acceleration...
      step_size: '{{ trigger.event.data.params.step_size }}'
      # Step down the volume step using square root
      # - turning quickly sends really high step_size
      volume_diff_sqrt: '{{ (step_size / 2) | sqrt() }}'
      # Db to percent (as used by media players in HA)
      volume_diff_fractional: '{{ (volume_diff_sqrt / 100) | round(2) }}'
      # Clip the volume, prevent setting it super loud by accident
      volume_diff_clipped: '{{ [0.15, volume_diff_fractional] | min }}'

  # Debug message
  - service: notify.mobile_app_phone_thijs
    data:
      title: Dial
      message: 'Step size: {{step_size}}, diff: {{volume_diff_sqrt}} -> {{volume_diff_clipped}}'
      data:
        tag: dial_test
    enabled: false
    alias: Debug notification

  - choose:
    # Turn the volume up
    - conditions:
      - condition: template
        value_template: "{{ step_mode == 'StepMode.Up' }}"
      - condition: numeric_state
        entity_id: media_player.receiver
        attribute: volume_level
        below: 0.65
        alias: Limit the maximum volume
      sequence:
      - service: media_player.volume_set
        target:
          entity_id: media_player.receiver
        data:
          volume_level: "{{ state_attr('media_player.receiver', 'volume_level')
            + volume_diff_clipped}}"
    # Turn the volume down
    - conditions:
      - condition: template
        value_template: "{{ step_mode == 'StepMode.Down' }}"
      sequence:
      - service: media_player.volume_set
        target:
          entity_id: media_player.receiver
        data:
          volume_level: "{{ state_attr('media_player.receiver', 'volume_level')
            - volume_diff_clipped}}"
