# New fancy mode buttons
# Uses input_select, defined in the UI
type: grid
columns: 5
cards:

  # Off
  - type: 'custom:button-card'
    name: 'Off'
    entity: script.home_cinema_off
    template: home_cinema_mode
    tap_action:
      action: call-service
      service: script.home_cinema_off
    lock:
      enabled: >-
        [[[ return states["input_select.home_cinema_mode"].state === "off" ]]]
      exemptions: []
    state:
      # Not active
      - color: 'var( --ha-card-background, var(--card-background-color, white) )'
        operator: template
        value: >-
          [[[ return states["input_select.home_cinema_mode"].state !== "off" ]]]
      # Pending
      - operator: template
        color: orange
        spin: true
        icon: 'mdi:loading'
        value: >-
          [[[ return states["input_boolean.home_cinema_pending"].state === "on" ]]]
      # Active
      - color: green
        operator: default

  # Chromecast
  - type: 'custom:button-card'
    name: Chromecast
    entity: script.home_cinema_chromecast
    template: home_cinema_mode
    tap_action:
      action: call-service
      service: script.home_cinema_chromecast
    lock: # Prevent running script again
      enabled: >-
        [[[ return states["input_select.home_cinema_mode"].state === "chromecast" ]]]
      exemptions: []
    state:
      # Not active
      - color: 'var( --ha-card-background, var(--card-background-color, white) )'
        operator: template
        value: >-
          [[[ return states["input_select.home_cinema_mode"].state !== "chromecast" ]]]
      # Pending
      - operator: template
        color: orange
        spin: true
        icon: 'mdi:loading'
        value: >-
          [[[ return states["input_boolean.home_cinema_pending"].state === "on" ]]]
      # Active
      - color: green
        operator: default

  # Bluetooth
  - type: 'custom:button-card'
    name: 'Bluetooth'
    entity: script.home_cinema_bluetooth
    template: home_cinema_mode
    tap_action:
      action: call-service
      service: script.home_cinema_bluetooth
    lock:
      enabled: >-
        [[[ return states["input_select.home_cinema_mode"].state === "bluetooth" ]]]
      exemptions: []
    state:
      # Not active
      - color: 'var( --ha-card-background, var(--card-background-color, white) )'
        operator: template
        value: >-
          [[[ return states["input_select.home_cinema_mode"].state !== "bluetooth" ]]]
      # Pending
      - operator: template
        color: orange
        spin: true
        icon: 'mdi:loading'
        value: >-
          [[[ return states["input_boolean.home_cinema_pending"].state === "on" ]]]
      # Active
      - color: green
        operator: default

  # TV (T-mobile)
  - type: 'custom:button-card'
    name: 'TV'
    entity: script.home_cinema_tv
    template: home_cinema_mode
    tap_action:
      action: call-service
      service: script.home_cinema_tv
    lock:
      enabled: >-
        [[[ return states["input_select.home_cinema_mode"].state === "tv" ]]]
      exemptions: []
    state:
      # Not active
      - color: 'var( --ha-card-background, var(--card-background-color, white) )'
        operator: template
        value: >-
          [[[ return states["input_select.home_cinema_mode"].state !== "tv" ]]]
      # Pending
      - operator: template
        color: orange
        spin: true
        icon: 'mdi:loading'
        value: >-
          [[[ return states["input_boolean.home_cinema_pending"].state === "on" ]]]
      # Active
      - color: green
        operator: default

  - type: grid
    columns: 2
    cards:
      # Laptop
      - type: 'custom:button-card'
        name: 'Laptop'
        entity: script.home_cinema_laptop
        template: home_cinema_mode_tiny
        tap_action:
          action: call-service
          service: script.home_cinema_laptop
        lock:
          enabled: >-
            [[[ return states["input_select.home_cinema_mode"].state === "laptop" ]]]
          exemptions: [ ]
        state:
          # Not active
          - color: 'var( --ha-card-background, var(--card-background-color, white) )'
            operator: template
            value: >-
              [[[ return states["input_select.home_cinema_mode"].state !== "laptop" ]]]
          # Pending
          - operator: template
            color: orange
            spin: true
            icon: 'mdi:loading'
            value: >-
              [[[ return states["input_boolean.home_cinema_pending"].state === "on" ]]]
            lock:
              enabled: true
              exemptions: [ ]
          # Active
          - color: green
            operator: default

      # Steam link
      - type: 'custom:button-card'
        name: 'Steam link'
        entity: script.home_cinema_steam_link
        template: home_cinema_mode_tiny
        tap_action:
          action: call-service
          service: script.home_cinema_steam_link
        lock:
          enabled: >-
            [[[ return states["input_select.home_cinema_mode"].state === "steamLink" ]]]
          exemptions: [ ]
        state:
          # Not active
          - color: 'var( --ha-card-background, var(--card-background-color, white) )'
            operator: template
            value: >-
              [[[ return states["input_select.home_cinema_mode"].state !== "steamLink" ]]]
          # Pending
          - operator: template
            color: orange
            spin: true
            icon: 'mdi:loading'
            value: >-
              [[[ return states["input_boolean.home_cinema_pending"].state === "on" ]]]
            lock:
              enabled: true
              exemptions: [ ]
          # Active
          - color: green
            operator: default

      # Raspberry Pi
      - type: 'custom:button-card'
        name: 'Raspberry Pi'
        entity: script.home_cinema_raspberry_pi
        template: home_cinema_mode_tiny
        tap_action:
          action: call-service
          service: script.home_cinema_raspberry_pi
        lock:
          enabled: >-
            [[[ return states["input_select.home_cinema_mode"].state === "raspberryPi" ]]]
          exemptions: [ ]
        state:
          # Not active
          - color: 'var( --ha-card-background, var(--card-background-color, white) )'
            operator: template
            value: >-
              [[[ return states["input_select.home_cinema_mode"].state !== "raspberryPi" ]]]
          # Pending
          - operator: template
            color: orange
            spin: true
            icon: 'mdi:loading'
            value: >-
              [[[ return states["input_boolean.home_cinema_pending"].state === "on" ]]]
            lock:
              enabled: true
              exemptions: [ ]
          # Active
          - color: green
            operator: default

      # Unknown
      - type: 'custom:button-card'
        name: 'Unknown'
        icon: mdi:help
        template: home_cinema_mode_tiny
        # TODO: incidate what this represents with a toast?
        #tap_action:
        #  action: call-service
        #  service: script.home_cinema_laptop
        lock:
          enabled: yes
          exemptions: [ ]
        state:
          # Not active
          - color: 'var( --ha-card-background, var(--card-background-color, white) )'
            operator: template
            value: >-
              [[[ return states["input_select.home_cinema_mode"].state !== "unknown" ]]]
          # Pending
          - operator: template
            color: orange
            spin: true
            icon: 'mdi:loading'
            value: >-
              [[[ return states["input_boolean.home_cinema_pending"].state === "on" ]]]
            lock:
              enabled: true
              exemptions: [ ]
          # Active
          - color: green
            operator: default
